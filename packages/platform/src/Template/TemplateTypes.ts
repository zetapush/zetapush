import { PageContent, PageDirection, Pagination, StringAnyMap } from '../CommonTypes';

export interface LocalizedTemplateCreation {
  /**IETF BCP 47 language tag*/
  languageTag: string;
  /**template name*/
  name: string;
  /**template contents, as a character string*/
  template: string;
}
export interface TemplateCreation {
  /**template name*/
  name: string;
  /**template contents, as a character string*/
  template: string;
}
export interface TemplateInfo {
  /**Template name*/
  name?: string;
  /**List of languages for which a localization of the template exists*/
  languageTags?: string[];
}
export interface TemplateListRequest {
  /**Pagination information*/
  page?: Pagination;
}
export interface TemplateListResult {
  /**Request leading to the result*/
  request?: TemplateListRequest;
  /**Result for the specified request*/
  result?: PageContent<TemplateInfo>;
  /**User field for traceability of requests. The value was generated by the client requester.*/
  requestId?: string;
}
export interface TemplateRemoval {
  /**IETF BCP 47 language tag*/
  languageTag?: string;
  /**template name*/
  name: string;
}
export interface TemplateRequest {
  /**Locale, as defined by IETF BCP 47*/
  languageTag?: string;
  /**Context ID. Clients and developers must not pass this explicitly. This value is generated by the server and can be passed back by the worker SDKs.*/
  contextId?: string;
  /**Template name, as configured by an admin*/
  name: string;
  /**User field for traceability of requests. Synchronous SDK APIs use this field for you.*/
  requestId?: string;
  /**Data model*/
  data: StringAnyMap;
}
export interface TemplateResult {
  /**Result of template evaluation*/
  content?: string;
  /**User field for traceability of requests. The value was generated by the client requester.*/
  requestId?: string;
}
